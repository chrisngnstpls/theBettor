{
  "contractName": "BetFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_betIdToDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "betIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "location",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_userBets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "betIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "location",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_keyMaster",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "createBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "allBets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "betIndex",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "location",
              "type": "address"
            }
          ],
          "internalType": "struct BetFactory.UserBet[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_betIdToDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"betIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"location\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_userBets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"betIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"location\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allBets\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"betIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"location\",\"type\":\"address\"}],\"internalType\":\"struct BetFactory.UserBet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_keyMaster\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"createBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BetFactory.sol\":\"BetFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/Bet.sol\":{\"keccak256\":\"0x04b7ccd2757cedab38559e7cb93681cb11434c4f19266efb54e72836a1f9174a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31cf8bfffdd88e3ed67f0c98da8510ccb263143f6c4e2da4a57bb5e6542a3cb5\",\"dweb:/ipfs/QmW8XTpDm12zf1LhYy7p1HgcFwKWgJZkYk8V75fqzsh5ct\"]},\"project:/contracts/BetFactory.sol\":{\"keccak256\":\"0x9fe37675c36e19665c8d46210b150821341a2c30051ceb2674a8222c8612b21c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95bb24246bd32f685b7b85132a428598b9142f4569ad94a407237f13d7a7d000\",\"dweb:/ipfs/QmWGMqzXKtcvKgkfrvNW34NKVcNFjaCtuPkWfj61WV4Mwb\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610620000505760003560e01c806312065fe01462000055578063189949a91462000085578063d1b3e19c14620000a5578063d706c75614620000eb578063d73d6ec51462000131575b600080fd5b3480156200006257600080fd5b506200006d62000161565b6040516200007c919062000924565b60405180910390f35b620000a360048036038101906200009d9190620006b0565b62000169565b005b348015620000b257600080fd5b50620000d16004803603810190620000cb91906200071f565b620003e2565b604051620000e29392919062000941565b60405180910390f35b348015620000f857600080fd5b506200011760048036038101906200011191906200071f565b6200045d565b604051620001289392919062000941565b60405180910390f35b3480156200013e57600080fd5b5062000149620004c7565b60405162000158919062000900565b60405180910390f35b600047905090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415620001a357600080fd5b60003414620003d8576000343385853086604051620001c29062000602565b620001d29594939291906200089c565b6040518091039082f0905080158015620001f0573d6000803e3d6000fd5b509050620001ff6000620005de565b60006200020d6000620005f4565b9050600060405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815250905080600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060028190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050620003dd565b600080fd5b505050565b60028181548110620003f357600080fd5b90600052602060002090600302016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60606002805480602002602001604051908101604052809291908181526020016000905b82821015620005d55783829060005260206000209060030201604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190620004eb565b50505050905090565b6001816000016000828254019250508190555050565b600081600001549050919050565b6119448062000b3283390190565b6000620006276200062184620009b2565b6200097e565b9050828152602081018484840111156200064057600080fd5b6200064d84828562000a78565b509392505050565b600081359050620006668162000afd565b92915050565b600082601f8301126200067e57600080fd5b81356200069084826020860162000610565b91505092915050565b600081359050620006aa8162000b17565b92915050565b600080600060608486031215620006c657600080fd5b600084013567ffffffffffffffff811115620006e157600080fd5b620006ef868287016200066c565b9350506020620007028682870162000655565b9250506040620007158682870162000699565b9150509250925092565b6000602082840312156200073257600080fd5b6000620007428482850162000699565b91505092915050565b600062000759838362000832565b60608301905092915050565b620007708162000a3a565b82525050565b620007818162000a3a565b82525050565b60006200079482620009f5565b620007a0818562000a18565b9350620007ad83620009e5565b8060005b83811015620007e4578151620007c888826200074b565b9750620007d58362000a0b565b925050600181019050620007b1565b5085935050505092915050565b6000620007fe8262000a00565b6200080a818562000a29565b93506200081c81856020860162000a87565b620008278162000aec565b840191505092915050565b6060820160008201516200084a60008501826200087a565b5060208201516200085f602085018262000765565b50604082015162000874604085018262000765565b50505050565b620008858162000a6e565b82525050565b620008968162000a6e565b82525050565b600060a082019050620008b3600083018862000776565b8181036020830152620008c78187620007f1565b9050620008d8604083018662000776565b620008e7606083018562000776565b620008f660808301846200088b565b9695505050505050565b600060208201905081810360008301526200091c818462000787565b905092915050565b60006020820190506200093b60008301846200088b565b92915050565b60006060820190506200095860008301866200088b565b62000967602083018562000776565b62000976604083018462000776565b949350505050565b6000604051905081810181811067ffffffffffffffff82111715620009a857620009a762000abd565b5b8060405250919050565b600067ffffffffffffffff821115620009d057620009cf62000abd565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600062000a478262000a4e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101562000aa757808201518184015260208101905062000a8a565b8381111562000ab7576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000b088162000a3a565b811462000b1457600080fd5b50565b62000b228162000a6e565b811462000b2e57600080fd5b5056fe608060405260405162001944380380620019448339818101604052810190620000299190620002e7565b84600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460048190555083600590805190602001906200008992919062000197565b506000600c60006101000a81548160ff02191690836002811115620000d7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060078190555060006008819055506000808190555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806009819055506001600a819055506063600b81905550505050505062000525565b828054620001a5906200045d565b90600052602060002090601f016020900481019282620001c9576000855562000215565b82601f10620001e457805160ff191683800117855562000215565b8280016001018555821562000215579182015b8281111562000214578251825591602001919060010190620001f7565b5b50905062000224919062000228565b5090565b5b808211156200024357600081600090555060010162000229565b5090565b60006200025e6200025884620003b6565b62000382565b9050828152602081018484840111156200027757600080fd5b6200028484828562000427565b509392505050565b6000815190506200029d81620004f1565b92915050565b600082601f830112620002b557600080fd5b8151620002c784826020860162000247565b91505092915050565b600081519050620002e1816200050b565b92915050565b600080600080600060a086880312156200030057600080fd5b600062000310888289016200028c565b955050602086015167ffffffffffffffff8111156200032e57600080fd5b6200033c88828901620002a3565b94505060406200034f888289016200028c565b935050606062000362888289016200028c565b92505060806200037588828901620002d0565b9150509295509295909350565b6000604051905081810181811067ffffffffffffffff82111715620003ac57620003ab620004c2565b5b8060405250919050565b600067ffffffffffffffff821115620003d457620003d3620004c2565b5b601f19601f8301169050602081019050919050565b6000620003f682620003fd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620004475780820151818401526020810190506200042a565b8381111562000457576000848401525b50505050565b600060028204905060018216806200047657607f821691505b602082108114156200048d576200048c62000493565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004fc81620003e9565b81146200050857600080fd5b50565b62000516816200041d565b81146200052257600080fd5b50565b61140f80620005356000396000f3fe6080604052600436106100f35760003560e01c8063772d63541161008a578063c45a015511610059578063c45a0155146102b3578063d0b8a361146102de578063ddca3f4314610307578063e134e33d14610332576100f3565b8063772d63541461021b57806384de1ea51461024657806391f7b49314610271578063aa8c217c14610288576100f3565b8063489582e1116100c6578063489582e11461018357806357e871e7146101ae5780635c39fcc1146101d95780636a8dec5b14610204576100f3565b806312065fe0146100f85780631fa859e81461012357806326df57421461014e57806330bfcb5f14610179575b600080fd5b34801561010457600080fd5b5061010d61035d565b60405161011a9190611113565b60405180910390f35b34801561012f57600080fd5b50610138610365565b60405161014591906110d6565b60405180910390f35b34801561015a57600080fd5b5061016361037c565b6040516101709190611113565b60405180910390f35b610181610382565b005b34801561018f57600080fd5b50610198610520565b6040516101a59190611113565b60405180910390f35b3480156101ba57600080fd5b506101c3610526565b6040516101d09190611113565b60405180910390f35b3480156101e557600080fd5b506101ee61052c565b6040516101fb91906110bb565b60405180910390f35b34801561021057600080fd5b50610219610552565b005b34801561022757600080fd5b50610230610a62565b60405161023d91906110bb565b60405180910390f35b34801561025257600080fd5b5061025b610a88565b60405161026891906110bb565b60405180910390f35b34801561027d57600080fd5b50610286610ab2565b005b34801561029457600080fd5b5061029d610c60565b6040516102aa9190611113565b60405180910390f35b3480156102bf57600080fd5b506102c8610c66565b6040516102d591906110bb565b60405180910390f35b3480156102ea57600080fd5b506103056004803603810190610300919061102c565b610c8c565b005b34801561031357600080fd5b5061031c610f83565b6040516103299190611113565b60405180910390f35b34801561033e57600080fd5b50610347610f89565b60405161035491906110f1565b60405180910390f35b600047905090565b6000600c60009054906101000a900460ff16905090565b600b5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156103eb57506002476103e8919061114a565b34145b801561047657506000600281111561042c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600c60009054906101000a900460ff166002811115610474577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b15610519574360008190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600c60006101000a81548160ff0219169083600281111561050f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555061051e565b600080fd5b565b600a5481565b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005460054361056291906111d5565b1061056c57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106155750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80156106705750600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b61067957600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060016007541480156107265750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b156108235760016008819055508173ffffffffffffffffffffffffffffffffffffffff166108fc60024761075a919061114a565b9081150290604051600060405180830381858888f19350505050158015610785573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107cc573d6000803e3d6000fd5b506002600c60006101000a81548160ff02191690836002811115610819577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610a5e565b60016008541480156108825750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1561097f5760016007819055508173ffffffffffffffffffffffffffffffffffffffff166108fc6002476108b6919061114a565b9081150290604051600060405180830381858888f193505050501580156108e1573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610928573d6000803e3d6000fd5b506002600c60006101000a81548160ff02191690836002811115610975577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610a5d565b600060075414801561099357506000600854145b15610a5c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156109fb576001600781905550610a5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610a5a5760016008819055505b5b5b5b5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0c57600080fd5b60006002811115610b46577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600c60009054906101000a900460ff166002811115610b8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610c59576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610c01573d6000803e3d6000fd5b506002600c60006101000a81548160ff02191690836002811115610c4e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555050610c5e565b600080fd5b565b60045481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ce657600080fd5b600b5460095411158015610cfe5750600a5460095410155b610d0757600080fd5b600047118015610d96575060016002811115610d4c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600c60009054906101000a900460ff166002811115610d94577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b610d9f57600080fd5b60006103e860095447610db2919061117b565b610dbc919061114a565b90506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610e8e5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b15610f7e576002600c60006101000a81548160ff02191690836002811115610edf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055508273ffffffffffffffffffffffffffffffffffffffff166108fc8347610f0a91906111d5565b9081150290604051600060405180830381858888f19350505050158015610f35573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610f7c573d6000803e3d6000fd5b505b505050565b60095481565b60058054610f96906112af565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc2906112af565b801561100f5780601f10610fe45761010080835404028352916020019161100f565b820191906000526020600020905b815481529060010190602001808311610ff257829003601f168201915b505050505081565b600081359050611026816113c2565b92915050565b60006020828403121561103e57600080fd5b600061104c84828501611017565b91505092915050565b61105e81611209565b82525050565b61106d8161126a565b82525050565b600061107e8261112e565b6110888185611139565b935061109881856020860161127c565b6110a18161139d565b840191505092915050565b6110b581611260565b82525050565b60006020820190506110d06000830184611055565b92915050565b60006020820190506110eb6000830184611064565b92915050565b6000602082019050818103600083015261110b8184611073565b905092915050565b600060208201905061112860008301846110ac565b92915050565b600081519050919050565b600082825260208201905092915050565b600061115582611260565b915061116083611260565b9250826111705761116f611310565b5b828204905092915050565b600061118682611260565b915061119183611260565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156111ca576111c96112e1565b5b828202905092915050565b60006111e082611260565b91506111eb83611260565b9250828210156111fe576111fd6112e1565b5b828203905092915050565b600061121482611240565b9050919050565b600061122682611240565b9050919050565b600081905061123b826113ae565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112758261122d565b9050919050565b60005b8381101561129a57808201518184015260208101905061127f565b838111156112a9576000848401525b50505050565b600060028204905060018216806112c757607f821691505b602082108114156112db576112da61136e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b600381106113bf576113be61133f565b5b50565b6113cb8161121b565b81146113d657600080fd5b5056fea2646970667358221220c33790ab1c58ed4cba95ca6a9df1a1192c6874c2d791f213b401dd591da5479264736f6c63430008000033a2646970667358221220a61eeb2808ebecb26acd2f6f934be02d0d39802ba1d8ae89984a3cf36435e38f64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9593:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:7"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:7"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:7"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:7"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:7"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:7"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:7"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:7"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:7",
                "type": ""
              }
            ],
            "src": "7:344:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "409:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "419:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "441:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "428:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "419:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "484:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "457:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "387:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "395:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "403:5:7",
                "type": ""
              }
            ],
            "src": "357:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "578:211:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "627:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "636:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "639:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "629:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "629:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "629:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "606:6:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "614:4:7",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "602:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "602:17:7"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "621:3:7"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "598:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "598:27:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "591:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:35:7"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "652:34:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "679:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "666:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:20:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "656:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "695:88:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "756:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "764:4:7",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "752:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "752:17:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "771:6:7"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "779:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "704:47:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:79:7"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "695:5:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "556:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "564:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "572:5:7",
                "type": ""
              }
            ],
            "src": "516:273:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "847:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "857:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "879:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "866:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "866:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "857:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "922:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "895:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "895:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "895:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "825:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "833:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "841:5:7",
                "type": ""
              }
            ],
            "src": "795:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1050:555:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1096:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1105:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1108:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1098:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1098:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1098:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1071:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1080:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1067:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1067:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1092:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1063:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1063:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1060:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1122:220:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1137:45:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1168:9:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1179:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1164:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1164:17:7"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1151:12:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1151:31:7"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1141:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1229:16:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1238:1:7",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1241:1:7",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1231:6:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1231:12:7"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1231:12:7"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1201:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1209:18:7",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1198:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1198:30:7"
                      },
                      "nodeType": "YulIf",
                      "src": "1195:2:7"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1259:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1304:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1315:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1300:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1300:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1324:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1269:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1269:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1259:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1352:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1367:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1381:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1371:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1397:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1432:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1443:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1428:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1428:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1452:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1407:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1407:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1397:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1480:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1495:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1509:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1499:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1525:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1560:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1571:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1556:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1556:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1580:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1535:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1525:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1004:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1015:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1027:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1035:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1043:6:7",
                "type": ""
              }
            ],
            "src": "940:665:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1677:196:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1723:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1732:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1735:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1725:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1725:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1725:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1698:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1707:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1694:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1694:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1719:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1690:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1690:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1687:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1749:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1764:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1778:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1768:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1793:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1828:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1839:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1824:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1824:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1848:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1803:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1803:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1793:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1647:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1658:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1670:6:7",
                "type": ""
              }
            ],
            "src": "1611:262:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2009:149:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2103:6:7"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2111:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_UserBet_$1032_memory_ptr_to_t_struct$_UserBet_$1032_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2019:83:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:96:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2019:96:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2124:28:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2142:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2147:4:7",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2138:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2138:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "2124:10:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_UserBet_$1032_memory_ptr_to_t_struct$_UserBet_$1032_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1982:6:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1990:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "1998:10:7",
                "type": ""
              }
            ],
            "src": "1879:279:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2219:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2236:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2259:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2241:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2241:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2229:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2229:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2229:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2207:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2214:3:7",
                "type": ""
              }
            ],
            "src": "2164:108:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2343:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2360:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2383:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2365:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2365:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2353:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2353:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2353:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2331:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2338:3:7",
                "type": ""
              }
            ],
            "src": "2278:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2642:758:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2652:93:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2739:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2666:72:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2666:79:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2656:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2754:118:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2860:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2865:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2761:98:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:111:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2754:3:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2881:96:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2971:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2896:74:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:81:7"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "2885:7:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2986:21:7",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "3000:7:7"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "2990:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3076:299:7",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3090:34:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3117:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3111:5:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3111:13:7"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "3094:13:7",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3137:120:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "3238:13:7"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3253:3:7"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_UserBet_$1032_memory_ptr_to_t_struct$_UserBet_$1032_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "3144:93:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3144:113:7"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3137:3:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3270:95:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3358:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "3280:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3280:85:7"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3270:6:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3038:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3041:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3035:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3035:13:7"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3049:18:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3051:14:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3060:1:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3063:1:7",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3056:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3056:9:7"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3051:1:7"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3020:14:7",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3022:10:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3031:1:7",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "3026:1:7",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "3016:359:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3384:10:7",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3391:3:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3384:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2621:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2628:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2637:3:7",
                "type": ""
              }
            ],
            "src": "2468:932:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3498:272:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3508:53:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3555:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3522:32:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3522:39:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3512:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3570:78:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3636:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3641:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3577:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3577:71:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3570:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3683:5:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3690:4:7",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3679:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3679:16:7"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3697:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3702:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3657:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3657:52:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3657:52:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3718:46:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3729:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3756:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3734:21:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3734:29:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3725:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3725:39:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3718:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3479:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3486:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3494:3:7",
                "type": ""
              }
            ],
            "src": "3406:364:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3944:578:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3954:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3970:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3975:4:7",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3966:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3966:14:7"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "3958:4:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3990:168:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4029:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4059:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4066:4:7",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4055:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4055:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4049:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4049:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4033:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4119:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4137:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4142:4:7",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4133:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4133:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4085:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4085:63:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4085:63:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4168:169:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4208:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4238:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4245:4:7",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4234:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4234:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4228:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4228:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4212:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4298:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4316:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4321:4:7",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4312:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4312:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4264:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4264:63:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4264:63:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4347:168:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4386:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4416:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4423:4:7",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4412:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4412:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4406:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4406:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4390:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4476:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4494:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4499:4:7",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4490:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4490:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4442:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4442:63:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4442:63:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_UserBet_$1032_memory_ptr_to_t_struct$_UserBet_$1032_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3931:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3938:3:7",
                "type": ""
              }
            ],
            "src": "3838:684:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4583:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4600:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4623:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4605:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4605:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4593:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4593:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4593:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4571:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4578:3:7",
                "type": ""
              }
            ],
            "src": "4528:108:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4707:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4724:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4747:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4729:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4729:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4717:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4717:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4717:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4695:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4702:3:7",
                "type": ""
              }
            ],
            "src": "4642:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4996:525:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5006:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5018:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5029:3:7",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5014:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5014:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5006:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5087:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5100:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5111:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5096:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5096:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5043:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5043:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5043:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5135:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5146:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5131:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5131:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5155:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5161:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5151:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5151:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5124:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5124:48:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5124:48:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5181:86:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5253:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5262:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5189:63:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5189:78:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5181:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5321:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5334:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5345:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5330:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5330:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5277:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5277:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5277:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5403:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5416:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5427:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5412:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5412:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5359:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5359:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5359:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5485:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5498:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5509:3:7",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5494:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5494:19:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5441:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5441:73:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5441:73:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_address_t_address_t_uint256__to_t_address_t_string_memory_ptr_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4936:9:7",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4948:6:7",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4956:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4964:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4972:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4980:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4991:4:7",
                "type": ""
              }
            ],
            "src": "4766:755:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5725:275:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5735:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5747:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5758:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5743:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5743:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5735:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5782:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5793:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5778:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5778:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5801:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5807:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5797:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5797:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5771:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5771:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5771:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5827:166:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5979:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5988:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5835:143:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5835:158:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5827:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5697:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5709:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5720:4:7",
                "type": ""
              }
            ],
            "src": "5527:473:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6104:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6114:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6126:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6137:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6122:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6122:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6114:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6194:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6207:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6218:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6203:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6203:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6150:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6150:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6150:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6076:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6088:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6099:4:7",
                "type": ""
              }
            ],
            "src": "6006:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6388:288:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6398:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6410:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6421:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6406:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6406:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6398:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6478:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6491:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6502:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6487:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6487:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6434:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6434:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6434:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6559:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6572:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6583:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6568:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6568:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6515:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6515:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6515:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6641:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6654:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6665:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6650:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6650:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6597:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6597:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6597:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6344:9:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6356:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6364:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6372:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6383:4:7",
                "type": ""
              }
            ],
            "src": "6234:442:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6722:243:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6732:19:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6748:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6742:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6742:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6732:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6760:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6782:6:7"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6790:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6778:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6778:17:7"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "6764:10:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6906:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6908:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6908:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6908:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "6849:10:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6861:18:7",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6846:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6846:34:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "6885:10:7"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6897:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6882:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6882:22:7"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "6843:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6843:62:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6840:2:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6944:2:7",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "6948:10:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6937:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6937:22:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6937:22:7"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6706:4:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6715:6:7",
                "type": ""
              }
            ],
            "src": "6682:283:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7038:265:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7143:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7145:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7145:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7145:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7115:6:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7123:18:7",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7112:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7112:30:7"
                  },
                  "nodeType": "YulIf",
                  "src": "7109:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7195:41:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7211:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7219:4:7",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7207:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7207:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7230:4:7",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7226:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7226:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7203:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7203:33:7"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "7195:4:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7273:23:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "7285:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7291:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7281:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7281:15:7"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "7273:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7022:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7033:4:7",
                "type": ""
              }
            ],
            "src": "6971:332:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7406:60:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7416:11:7",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "7424:3:7"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "7416:4:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7437:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "7449:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7454:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7445:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7445:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "7437:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "7393:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7401:4:7",
                "type": ""
              }
            ],
            "src": "7309:157:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7571:40:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7582:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7598:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7592:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7592:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7582:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7554:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7564:6:7",
                "type": ""
              }
            ],
            "src": "7472:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7676:40:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7687:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7703:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7697:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7697:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7687:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7659:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7669:6:7",
                "type": ""
              }
            ],
            "src": "7617:99:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7822:38:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7832:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "7844:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7849:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7840:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7840:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "7832:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "7809:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "7817:4:7",
                "type": ""
              }
            ],
            "src": "7722:138:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8002:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8019:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8024:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8012:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8012:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8012:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8040:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8059:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8064:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8055:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8055:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8040:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7974:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7979:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7990:11:7",
                "type": ""
              }
            ],
            "src": "7866:209:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8177:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8194:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8199:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8187:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8187:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8187:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8215:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8234:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8239:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8230:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8230:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8215:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8149:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8154:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8165:11:7",
                "type": ""
              }
            ],
            "src": "8081:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8301:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8311:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8340:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8322:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8322:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8311:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8283:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8293:7:7",
                "type": ""
              }
            ],
            "src": "8256:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8403:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8413:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8428:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8435:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8424:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8424:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8413:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8385:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8395:7:7",
                "type": ""
              }
            ],
            "src": "8358:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8535:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8545:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8556:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8545:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8517:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8527:7:7",
                "type": ""
              }
            ],
            "src": "8490:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8624:103:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "8647:3:7"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "8652:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8657:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "8634:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8634:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8634:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "8705:3:7"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8710:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8701:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8701:16:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8719:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8694:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8694:27:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8694:27:7"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8606:3:7",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8611:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8616:6:7",
                "type": ""
              }
            ],
            "src": "8573:154:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8782:258:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8792:10:7",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8801:1:7",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8796:1:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8861:63:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8886:3:7"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8891:1:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8882:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8882:11:7"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8905:3:7"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8910:1:7"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8901:3:7"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8901:11:7"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8895:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8895:18:7"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8875:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8875:39:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8875:39:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8822:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8825:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8819:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8819:13:7"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8833:19:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8835:15:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8844:1:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8847:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8840:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8840:10:7"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8835:1:7"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8815:3:7",
                    "statements": []
                  },
                  "src": "8811:113:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8958:76:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9008:3:7"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9013:6:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9004:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9004:16:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9022:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8997:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8997:27:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8997:27:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8939:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8942:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8936:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8936:13:7"
                  },
                  "nodeType": "YulIf",
                  "src": "8933:2:7"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8764:3:7",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8769:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8774:6:7",
                "type": ""
              }
            ],
            "src": "8733:307:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9074:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9091:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9094:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9084:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9084:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9084:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9188:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9191:4:7",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9181:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9181:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9181:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9212:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9215:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9205:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9205:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9205:15:7"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "9046:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9280:54:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9290:38:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9308:5:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9315:2:7",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9304:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9304:14:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9324:2:7",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9320:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9320:7:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9300:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9300:28:7"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "9290:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9263:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "9273:6:7",
                "type": ""
              }
            ],
            "src": "9232:102:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9383:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9440:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9449:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9452:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9442:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9442:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9442:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9406:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9431:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "9413:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9413:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9403:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9403:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9396:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9396:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "9393:2:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9376:5:7",
                "type": ""
              }
            ],
            "src": "9340:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9511:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9568:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9577:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9580:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9570:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9570:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9570:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9534:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9559:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "9541:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9541:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9531:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9531:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9524:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9524:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "9521:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9504:5:7",
                "type": ""
              }
            ],
            "src": "9468:122:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_UserBet_$1032_memory_ptr_to_t_struct$_UserBet_$1032_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_UserBet_$1032_memory_ptr_to_t_struct$_UserBet_$1032_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x60)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct BetFactory.UserBet[] -> struct BetFactory.UserBet[]\n    function abi_encode_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_UserBet_$1032_memory_ptr_to_t_struct$_UserBet_$1032_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct BetFactory.UserBet -> struct BetFactory.UserBet\n    function abi_encode_t_struct$_UserBet_$1032_memory_ptr_to_t_struct$_UserBet_$1032_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // betIndex\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // initiator\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // location\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_address_t_address_t_uint256__to_t_address_t_string_memory_ptr_t_address_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "143:1367:5:-:0;;;;;;;;;",
  "deployedSourceMap": "143:1367:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1311:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;504:795;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;463:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;407:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1413:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1311:94;1353:4;1376:21;1369:28;;1311:94;:::o;504:795::-;626:10;612:24;;:10;:24;;;;604:33;;;;;;673:1;661:9;:13;658:622;;692:7;716:9;727:10;739:5;746:10;766:4;773;702:76;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;692:86;;793:18;:6;:16;:18::i;:::-;826:16;845;:6;:14;:16::i;:::-;826:35;;892:25;920:147;;;;;;;;958:8;920:147;;;;997:10;920:147;;;;;;1045:3;920:147;;;;;892:175;;1174:10;1146:15;:25;1162:8;1146:25;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:9;1214:10;1199:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:622;;;;;;1260:8;;;658:622;504:795;;;:::o;463:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;407:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1413:92::-;1452:16;1488:9;1481:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1413:92;:::o;945:123:2:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:344:7:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;516:273::-;;621:3;614:4;606:6;602:17;598:27;588:2;;639:1;636;629:12;588:2;679:6;666:20;704:79;779:3;771:6;764:4;756:6;752:17;704:79;:::i;:::-;695:88;;578:211;;;;;:::o;795:139::-;;879:6;866:20;857:29;;895:33;922:5;895:33;:::i;:::-;847:87;;;;:::o;940:665::-;;;;1092:2;1080:9;1071:7;1067:23;1063:32;1060:2;;;1108:1;1105;1098:12;1060:2;1179:1;1168:9;1164:17;1151:31;1209:18;1201:6;1198:30;1195:2;;;1241:1;1238;1231:12;1195:2;1269:63;1324:7;1315:6;1304:9;1300:22;1269:63;:::i;:::-;1259:73;;1122:220;1381:2;1407:53;1452:7;1443:6;1432:9;1428:22;1407:53;:::i;:::-;1397:63;;1352:118;1509:2;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1480:118;1050:555;;;;;:::o;1611:262::-;;1719:2;1707:9;1698:7;1694:23;1690:32;1687:2;;;1735:1;1732;1725:12;1687:2;1778:1;1803:53;1848:7;1839:6;1828:9;1824:22;1803:53;:::i;:::-;1793:63;;1749:117;1677:196;;;;:::o;1879:279::-;;2019:96;2111:3;2103:6;2019:96;:::i;:::-;2147:4;2142:3;2138:14;2124:28;;2009:149;;;;:::o;2164:108::-;2241:24;2259:5;2241:24;:::i;:::-;2236:3;2229:37;2219:53;;:::o;2278:118::-;2365:24;2383:5;2365:24;:::i;:::-;2360:3;2353:37;2343:53;;:::o;2468:932::-;;2666:79;2739:5;2666:79;:::i;:::-;2761:111;2865:6;2860:3;2761:111;:::i;:::-;2754:118;;2896:81;2971:5;2896:81;:::i;:::-;3000:7;3031:1;3016:359;3041:6;3038:1;3035:13;3016:359;;;3117:6;3111:13;3144:113;3253:3;3238:13;3144:113;:::i;:::-;3137:120;;3280:85;3358:6;3280:85;:::i;:::-;3270:95;;3076:299;3063:1;3060;3056:9;3051:14;;3016:359;;;3020:14;3391:3;3384:10;;2642:758;;;;;;;:::o;3406:364::-;;3522:39;3555:5;3522:39;:::i;:::-;3577:71;3641:6;3636:3;3577:71;:::i;:::-;3570:78;;3657:52;3702:6;3697:3;3690:4;3683:5;3679:16;3657:52;:::i;:::-;3734:29;3756:6;3734:29;:::i;:::-;3729:3;3725:39;3718:46;;3498:272;;;;;:::o;3838:684::-;3975:4;3970:3;3966:14;4066:4;4059:5;4055:16;4049:23;4085:63;4142:4;4137:3;4133:14;4119:12;4085:63;:::i;:::-;3990:168;4245:4;4238:5;4234:16;4228:23;4264:63;4321:4;4316:3;4312:14;4298:12;4264:63;:::i;:::-;4168:169;4423:4;4416:5;4412:16;4406:23;4442:63;4499:4;4494:3;4490:14;4476:12;4442:63;:::i;:::-;4347:168;3944:578;;;:::o;4528:108::-;4605:24;4623:5;4605:24;:::i;:::-;4600:3;4593:37;4583:53;;:::o;4642:118::-;4729:24;4747:5;4729:24;:::i;:::-;4724:3;4717:37;4707:53;;:::o;4766:755::-;;5029:3;5018:9;5014:19;5006:27;;5043:71;5111:1;5100:9;5096:17;5087:6;5043:71;:::i;:::-;5161:9;5155:4;5151:20;5146:2;5135:9;5131:18;5124:48;5189:78;5262:4;5253:6;5189:78;:::i;:::-;5181:86;;5277:72;5345:2;5334:9;5330:18;5321:6;5277:72;:::i;:::-;5359;5427:2;5416:9;5412:18;5403:6;5359:72;:::i;:::-;5441:73;5509:3;5498:9;5494:19;5485:6;5441:73;:::i;:::-;4996:525;;;;;;;;:::o;5527:473::-;;5758:2;5747:9;5743:18;5735:26;;5807:9;5801:4;5797:20;5793:1;5782:9;5778:17;5771:47;5835:158;5988:4;5979:6;5835:158;:::i;:::-;5827:166;;5725:275;;;;:::o;6006:222::-;;6137:2;6126:9;6122:18;6114:26;;6150:71;6218:1;6207:9;6203:17;6194:6;6150:71;:::i;:::-;6104:124;;;;:::o;6234:442::-;;6421:2;6410:9;6406:18;6398:26;;6434:71;6502:1;6491:9;6487:17;6478:6;6434:71;:::i;:::-;6515:72;6583:2;6572:9;6568:18;6559:6;6515:72;:::i;:::-;6597;6665:2;6654:9;6650:18;6641:6;6597:72;:::i;:::-;6388:288;;;;;;:::o;6682:283::-;;6748:2;6742:9;6732:19;;6790:4;6782:6;6778:17;6897:6;6885:10;6882:22;6861:18;6849:10;6846:34;6843:62;6840:2;;;6908:18;;:::i;:::-;6840:2;6948:10;6944:2;6937:22;6722:243;;;;:::o;6971:332::-;;7123:18;7115:6;7112:30;7109:2;;;7145:18;;:::i;:::-;7109:2;7230:4;7226:9;7219:4;7211:6;7207:17;7203:33;7195:41;;7291:4;7285;7281:15;7273:23;;7038:265;;;:::o;7309:157::-;;7424:3;7416:11;;7454:4;7449:3;7445:14;7437:22;;7406:60;;;:::o;7472:139::-;;7598:5;7592:12;7582:22;;7571:40;;;:::o;7617:99::-;;7703:5;7697:12;7687:22;;7676:40;;;:::o;7722:138::-;;7849:4;7844:3;7840:14;7832:22;;7822:38;;;:::o;7866:209::-;;8024:6;8019:3;8012:19;8064:4;8059:3;8055:14;8040:29;;8002:73;;;;:::o;8081:169::-;;8199:6;8194:3;8187:19;8239:4;8234:3;8230:14;8215:29;;8177:73;;;;:::o;8256:96::-;;8322:24;8340:5;8322:24;:::i;:::-;8311:35;;8301:51;;;:::o;8358:126::-;;8435:42;8428:5;8424:54;8413:65;;8403:81;;;:::o;8490:77::-;;8556:5;8545:16;;8535:32;;;:::o;8573:154::-;8657:6;8652:3;8647;8634:30;8719:1;8710:6;8705:3;8701:16;8694:27;8624:103;;;:::o;8733:307::-;8801:1;8811:113;8825:6;8822:1;8819:13;8811:113;;;8910:1;8905:3;8901:11;8895:18;8891:1;8886:3;8882:11;8875:39;8847:2;8844:1;8840:10;8835:15;;8811:113;;;8942:6;8939:1;8936:13;8933:2;;;9022:1;9013:6;9008:3;9004:16;8997:27;8933:2;8782:258;;;;:::o;9046:180::-;9094:77;9091:1;9084:88;9191:4;9188:1;9181:15;9215:4;9212:1;9205:15;9232:102;;9324:2;9320:7;9315:2;9308:5;9304:14;9300:28;9290:38;;9280:54;;;:::o;9340:122::-;9413:24;9431:5;9413:24;:::i;:::-;9406:5;9403:35;9393:2;;9452:1;9449;9442:12;9393:2;9383:79;:::o;9468:122::-;9541:24;9559:5;9541:24;:::i;:::-;9534:5;9531:35;9521:2;;9580:1;9577;9570:12;9521:2;9511:79;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Bet.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\ncontract BetFactory {\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _betId;\r\n    \r\n    constructor() public payable {}\r\n    \r\n    struct UserBet {\r\n        uint betIndex;\r\n        address initiator;\r\n        address location;\r\n    }\r\n    mapping(uint => UserBet) public _betIdToDetails;\r\n\r\n    UserBet[] public _userBets;\r\n\r\n    \r\n    function createBet(string memory _name, address _keyMaster, uint256 _fee) public payable {\r\n        require(msg.sender != _keyMaster);\r\n        \r\n        if(msg.value !=0){\r\n\r\n            Bet bet = new Bet{value:msg.value}(msg.sender, _name, _keyMaster, address(this), _fee);\r\n            _betId.increment();\r\n            uint256 newBetId = _betId.current();\r\n            \r\n\r\n            UserBet memory newUserBet = UserBet({\r\n                betIndex : newBetId,\r\n                initiator : msg.sender,\r\n                location : address(bet)\r\n\r\n            });\r\n            // Bet bet = new Bet(msg.sender, _name, _status );\r\n            _betIdToDetails[newBetId] = newUserBet;\r\n            _userBets.push(newUserBet);\r\n\r\n        } else {\r\n            revert();\r\n        }\r\n        \r\n\r\n    }\r\n    \r\n    function getBalance() public view returns(uint){\r\n        return address(this).balance;\r\n    }\r\n\r\n    function allBets() public view returns(UserBet[] memory) {\r\n        return _userBets;\r\n    }\r\n\r\n}",
  "sourcePath": "E:\\theBettor2\\contracts\\BetFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/BetFactory.sol",
    "exportedSymbols": {
      "Bet": [
        1010
      ],
      "BetFactory": [
        1147
      ],
      "Context": [
        134
      ],
      "Counters": [
        208
      ],
      "Ownable": [
        112
      ],
      "SafeMath": [
        520
      ]
    },
    "id": 1148,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1012,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:5"
      },
      {
        "absolutePath": "project:/contracts/Bet.sol",
        "file": "./Bet.sol",
        "id": 1013,
        "nodeType": "ImportDirective",
        "scope": 1148,
        "sourceUnit": 1011,
        "src": "66:19:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 1014,
        "nodeType": "ImportDirective",
        "scope": 1148,
        "sourceUnit": 209,
        "src": "87:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1010
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1147,
        "linearizedBaseContracts": [
          1147
        ],
        "name": "BetFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1018,
            "libraryName": {
              "id": 1015,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 208,
              "src": "176:8:5"
            },
            "nodeType": "UsingForDirective",
            "src": "170:36:5",
            "typeName": {
              "id": 1017,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1016,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 140,
                "src": "189:16:5"
              },
              "referencedDeclaration": 140,
              "src": "189:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 1021,
            "mutability": "mutable",
            "name": "_betId",
            "nodeType": "VariableDeclaration",
            "scope": 1147,
            "src": "212:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$140_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 1020,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1019,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 140,
                "src": "212:16:5"
              },
              "referencedDeclaration": 140,
              "src": "212:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1024,
              "nodeType": "Block",
              "src": "285:2:5",
              "statements": []
            },
            "id": 1025,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:2:5"
            },
            "returnParameters": {
              "id": 1023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:0:5"
            },
            "scope": 1147,
            "src": "256:31:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "BetFactory.UserBet",
            "id": 1032,
            "members": [
              {
                "constant": false,
                "id": 1027,
                "mutability": "mutable",
                "name": "betIndex",
                "nodeType": "VariableDeclaration",
                "scope": 1032,
                "src": "325:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1026,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "325:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1029,
                "mutability": "mutable",
                "name": "initiator",
                "nodeType": "VariableDeclaration",
                "scope": 1032,
                "src": "349:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1028,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "349:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1031,
                "mutability": "mutable",
                "name": "location",
                "nodeType": "VariableDeclaration",
                "scope": 1032,
                "src": "377:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1030,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserBet",
            "nodeType": "StructDefinition",
            "scope": 1147,
            "src": "299:102:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d706c756",
            "id": 1037,
            "mutability": "mutable",
            "name": "_betIdToDetails",
            "nodeType": "VariableDeclaration",
            "scope": 1147,
            "src": "407:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBet_$1032_storage_$",
              "typeString": "mapping(uint256 => struct BetFactory.UserBet)"
            },
            "typeName": {
              "id": 1036,
              "keyType": {
                "id": 1033,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "415:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "407:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBet_$1032_storage_$",
                "typeString": "mapping(uint256 => struct BetFactory.UserBet)"
              },
              "valueType": {
                "id": 1035,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1034,
                  "name": "UserBet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1032,
                  "src": "423:7:5"
                },
                "referencedDeclaration": 1032,
                "src": "423:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserBet_$1032_storage_ptr",
                  "typeString": "struct BetFactory.UserBet"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d1b3e19c",
            "id": 1041,
            "mutability": "mutable",
            "name": "_userBets",
            "nodeType": "VariableDeclaration",
            "scope": 1147,
            "src": "463:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_storage_$dyn_storage",
              "typeString": "struct BetFactory.UserBet[]"
            },
            "typeName": {
              "baseType": {
                "id": 1039,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1038,
                  "name": "UserBet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1032,
                  "src": "463:7:5"
                },
                "referencedDeclaration": 1032,
                "src": "463:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserBet_$1032_storage_ptr",
                  "typeString": "struct BetFactory.UserBet"
                }
              },
              "id": 1040,
              "nodeType": "ArrayTypeName",
              "src": "463:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_storage_$dyn_storage_ptr",
                "typeString": "struct BetFactory.UserBet[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "593:706:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1051,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "612:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "612:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1053,
                          "name": "_keyMaster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "626:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "612:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "604:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "604:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1056,
                  "nodeType": "ExpressionStatement",
                  "src": "604:33:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1057,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "661:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "661:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "673:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "661:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1121,
                    "nodeType": "Block",
                    "src": "1245:35:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1118,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "1260:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1260:8:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1120,
                        "nodeType": "ExpressionStatement",
                        "src": "1260:8:5"
                      }
                    ]
                  },
                  "id": 1122,
                  "nodeType": "IfStatement",
                  "src": "658:622:5",
                  "trueBody": {
                    "id": 1117,
                    "nodeType": "Block",
                    "src": "675:564:5",
                    "statements": [
                      {
                        "assignments": [
                          1063
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1063,
                            "mutability": "mutable",
                            "name": "bet",
                            "nodeType": "VariableDeclaration",
                            "scope": 1117,
                            "src": "692:7:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Bet_$1010",
                              "typeString": "contract Bet"
                            },
                            "typeName": {
                              "id": 1062,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1061,
                                "name": "Bet",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1010,
                                "src": "692:3:5"
                              },
                              "referencedDeclaration": 1010,
                              "src": "692:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Bet_$1010",
                                "typeString": "contract Bet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1080,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1070,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "727:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "727:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1072,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1043,
                              "src": "739:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1073,
                              "name": "_keyMaster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "746:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1076,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "766:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BetFactory_$1147",
                                    "typeString": "contract BetFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BetFactory_$1147",
                                    "typeString": "contract BetFactory"
                                  }
                                ],
                                "id": 1075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "758:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1074,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "758:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "758:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1078,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1047,
                              "src": "773:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "702:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_payable$_t_address_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_Bet_$1010_$",
                                "typeString": "function (address,string memory,address,address,uint256) payable returns (contract Bet)"
                              },
                              "typeName": {
                                "id": 1065,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1064,
                                  "name": "Bet",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1010,
                                  "src": "706:3:5"
                                },
                                "referencedDeclaration": 1010,
                                "src": "706:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Bet_$1010",
                                  "typeString": "contract Bet"
                                }
                              }
                            },
                            "id": 1069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 1067,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "716:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "716:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "702:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_payable$_t_address_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_Bet_$1010_$value",
                              "typeString": "function (address,string memory,address,address,uint256) payable returns (contract Bet)"
                            }
                          },
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "702:76:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Bet_$1010",
                            "typeString": "contract Bet"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "692:86:5"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1081,
                              "name": "_betId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "793:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$140_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 1083,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "793:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$140_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$140_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "793:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1085,
                        "nodeType": "ExpressionStatement",
                        "src": "793:18:5"
                      },
                      {
                        "assignments": [
                          1087
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1087,
                            "mutability": "mutable",
                            "name": "newBetId",
                            "nodeType": "VariableDeclaration",
                            "scope": 1117,
                            "src": "826:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1086,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "826:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1091,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1088,
                              "name": "_betId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "845:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$140_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 1089,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 152,
                            "src": "845:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$140_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$140_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "845:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "826:35:5"
                      },
                      {
                        "assignments": [
                          1094
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1094,
                            "mutability": "mutable",
                            "name": "newUserBet",
                            "nodeType": "VariableDeclaration",
                            "scope": 1117,
                            "src": "892:25:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserBet_$1032_memory_ptr",
                              "typeString": "struct BetFactory.UserBet"
                            },
                            "typeName": {
                              "id": 1093,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1092,
                                "name": "UserBet",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1032,
                                "src": "892:7:5"
                              },
                              "referencedDeclaration": 1032,
                              "src": "892:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserBet_$1032_storage_ptr",
                                "typeString": "struct BetFactory.UserBet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1104,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1096,
                              "name": "newBetId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1087,
                              "src": "958:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1097,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "997:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "997:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1101,
                                  "name": "bet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1063,
                                  "src": "1045:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Bet_$1010",
                                    "typeString": "contract Bet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Bet_$1010",
                                    "typeString": "contract Bet"
                                  }
                                ],
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1037:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1099,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1037:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1037:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1095,
                            "name": "UserBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1032,
                            "src": "920:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_UserBet_$1032_storage_ptr_$",
                              "typeString": "type(struct BetFactory.UserBet storage pointer)"
                            }
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "betIndex",
                            "initiator",
                            "location"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "920:147:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserBet_$1032_memory_ptr",
                            "typeString": "struct BetFactory.UserBet memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "892:175:5"
                      },
                      {
                        "expression": {
                          "id": 1109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1105,
                              "name": "_betIdToDetails",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1037,
                              "src": "1146:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBet_$1032_storage_$",
                                "typeString": "mapping(uint256 => struct BetFactory.UserBet storage ref)"
                              }
                            },
                            "id": 1107,
                            "indexExpression": {
                              "id": 1106,
                              "name": "newBetId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1087,
                              "src": "1162:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1146:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserBet_$1032_storage",
                              "typeString": "struct BetFactory.UserBet storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1108,
                            "name": "newUserBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "1174:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserBet_$1032_memory_ptr",
                              "typeString": "struct BetFactory.UserBet memory"
                            }
                          },
                          "src": "1146:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserBet_$1032_storage",
                            "typeString": "struct BetFactory.UserBet storage ref"
                          }
                        },
                        "id": 1110,
                        "nodeType": "ExpressionStatement",
                        "src": "1146:38:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1114,
                              "name": "newUserBet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1094,
                              "src": "1214:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserBet_$1032_memory_ptr",
                                "typeString": "struct BetFactory.UserBet memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_UserBet_$1032_memory_ptr",
                                "typeString": "struct BetFactory.UserBet memory"
                              }
                            ],
                            "expression": {
                              "id": 1111,
                              "name": "_userBets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1041,
                              "src": "1199:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_storage_$dyn_storage",
                                "typeString": "struct BetFactory.UserBet storage ref[] storage ref"
                              }
                            },
                            "id": 1113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1199:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_UserBet_$1032_storage_$returns$__$",
                              "typeString": "function (struct BetFactory.UserBet storage ref)"
                            }
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1199:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1116,
                        "nodeType": "ExpressionStatement",
                        "src": "1199:26:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "189949a9",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "523:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "_keyMaster",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "544:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1047,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "564:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "522:55:5"
            },
            "returnParameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:0:5"
            },
            "scope": 1147,
            "src": "504:795:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "1358:47:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1131,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "1384:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BetFactory_$1147",
                            "typeString": "contract BetFactory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BetFactory_$1147",
                            "typeString": "contract BetFactory"
                          }
                        ],
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1376:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1376:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1376:13:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1376:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1128,
                  "id": 1134,
                  "nodeType": "Return",
                  "src": "1369:28:5"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 1136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:2:5"
            },
            "returnParameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "1353:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1126,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1352:6:5"
            },
            "scope": 1147,
            "src": "1311:94:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1145,
              "nodeType": "Block",
              "src": "1470:35:5",
              "statements": [
                {
                  "expression": {
                    "id": 1143,
                    "name": "_userBets",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1041,
                    "src": "1488:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_storage_$dyn_storage",
                      "typeString": "struct BetFactory.UserBet storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1142,
                  "id": 1144,
                  "nodeType": "Return",
                  "src": "1481:16:5"
                }
              ]
            },
            "functionSelector": "d73d6ec5",
            "id": 1146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allBets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1429:2:5"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1146,
                  "src": "1452:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BetFactory.UserBet[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1139,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1138,
                        "name": "UserBet",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1032,
                        "src": "1452:7:5"
                      },
                      "referencedDeclaration": 1032,
                      "src": "1452:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserBet_$1032_storage_ptr",
                        "typeString": "struct BetFactory.UserBet"
                      }
                    },
                    "id": 1140,
                    "nodeType": "ArrayTypeName",
                    "src": "1452:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_storage_$dyn_storage_ptr",
                      "typeString": "struct BetFactory.UserBet[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1451:18:5"
            },
            "scope": 1147,
            "src": "1413:92:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1148,
        "src": "143:1367:5"
      }
    ],
    "src": "39:1471:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/BetFactory.sol",
    "exportedSymbols": {
      "Bet": [
        1010
      ],
      "BetFactory": [
        1147
      ],
      "Context": [
        134
      ],
      "Counters": [
        208
      ],
      "Ownable": [
        112
      ],
      "SafeMath": [
        520
      ]
    },
    "id": 1148,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1012,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:5"
      },
      {
        "absolutePath": "project:/contracts/Bet.sol",
        "file": "./Bet.sol",
        "id": 1013,
        "nodeType": "ImportDirective",
        "scope": 1148,
        "sourceUnit": 1011,
        "src": "66:19:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 1014,
        "nodeType": "ImportDirective",
        "scope": 1148,
        "sourceUnit": 209,
        "src": "87:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1010
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1147,
        "linearizedBaseContracts": [
          1147
        ],
        "name": "BetFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1018,
            "libraryName": {
              "id": 1015,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 208,
              "src": "176:8:5"
            },
            "nodeType": "UsingForDirective",
            "src": "170:36:5",
            "typeName": {
              "id": 1017,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1016,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 140,
                "src": "189:16:5"
              },
              "referencedDeclaration": 140,
              "src": "189:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 1021,
            "mutability": "mutable",
            "name": "_betId",
            "nodeType": "VariableDeclaration",
            "scope": 1147,
            "src": "212:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$140_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 1020,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1019,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 140,
                "src": "212:16:5"
              },
              "referencedDeclaration": 140,
              "src": "212:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1024,
              "nodeType": "Block",
              "src": "285:2:5",
              "statements": []
            },
            "id": 1025,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:2:5"
            },
            "returnParameters": {
              "id": 1023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:0:5"
            },
            "scope": 1147,
            "src": "256:31:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "BetFactory.UserBet",
            "id": 1032,
            "members": [
              {
                "constant": false,
                "id": 1027,
                "mutability": "mutable",
                "name": "betIndex",
                "nodeType": "VariableDeclaration",
                "scope": 1032,
                "src": "325:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1026,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "325:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1029,
                "mutability": "mutable",
                "name": "initiator",
                "nodeType": "VariableDeclaration",
                "scope": 1032,
                "src": "349:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1028,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "349:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1031,
                "mutability": "mutable",
                "name": "location",
                "nodeType": "VariableDeclaration",
                "scope": 1032,
                "src": "377:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1030,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserBet",
            "nodeType": "StructDefinition",
            "scope": 1147,
            "src": "299:102:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d706c756",
            "id": 1037,
            "mutability": "mutable",
            "name": "_betIdToDetails",
            "nodeType": "VariableDeclaration",
            "scope": 1147,
            "src": "407:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBet_$1032_storage_$",
              "typeString": "mapping(uint256 => struct BetFactory.UserBet)"
            },
            "typeName": {
              "id": 1036,
              "keyType": {
                "id": 1033,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "415:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "407:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBet_$1032_storage_$",
                "typeString": "mapping(uint256 => struct BetFactory.UserBet)"
              },
              "valueType": {
                "id": 1035,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1034,
                  "name": "UserBet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1032,
                  "src": "423:7:5"
                },
                "referencedDeclaration": 1032,
                "src": "423:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserBet_$1032_storage_ptr",
                  "typeString": "struct BetFactory.UserBet"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d1b3e19c",
            "id": 1041,
            "mutability": "mutable",
            "name": "_userBets",
            "nodeType": "VariableDeclaration",
            "scope": 1147,
            "src": "463:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_storage_$dyn_storage",
              "typeString": "struct BetFactory.UserBet[]"
            },
            "typeName": {
              "baseType": {
                "id": 1039,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1038,
                  "name": "UserBet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1032,
                  "src": "463:7:5"
                },
                "referencedDeclaration": 1032,
                "src": "463:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserBet_$1032_storage_ptr",
                  "typeString": "struct BetFactory.UserBet"
                }
              },
              "id": 1040,
              "nodeType": "ArrayTypeName",
              "src": "463:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_storage_$dyn_storage_ptr",
                "typeString": "struct BetFactory.UserBet[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "593:706:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1051,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "612:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "612:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1053,
                          "name": "_keyMaster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "626:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "612:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "604:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "604:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1056,
                  "nodeType": "ExpressionStatement",
                  "src": "604:33:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1057,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "661:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "661:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "673:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "661:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1121,
                    "nodeType": "Block",
                    "src": "1245:35:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1118,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "1260:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1260:8:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1120,
                        "nodeType": "ExpressionStatement",
                        "src": "1260:8:5"
                      }
                    ]
                  },
                  "id": 1122,
                  "nodeType": "IfStatement",
                  "src": "658:622:5",
                  "trueBody": {
                    "id": 1117,
                    "nodeType": "Block",
                    "src": "675:564:5",
                    "statements": [
                      {
                        "assignments": [
                          1063
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1063,
                            "mutability": "mutable",
                            "name": "bet",
                            "nodeType": "VariableDeclaration",
                            "scope": 1117,
                            "src": "692:7:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Bet_$1010",
                              "typeString": "contract Bet"
                            },
                            "typeName": {
                              "id": 1062,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1061,
                                "name": "Bet",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1010,
                                "src": "692:3:5"
                              },
                              "referencedDeclaration": 1010,
                              "src": "692:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Bet_$1010",
                                "typeString": "contract Bet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1080,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1070,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "727:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "727:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1072,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1043,
                              "src": "739:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1073,
                              "name": "_keyMaster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "746:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1076,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "766:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BetFactory_$1147",
                                    "typeString": "contract BetFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BetFactory_$1147",
                                    "typeString": "contract BetFactory"
                                  }
                                ],
                                "id": 1075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "758:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1074,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "758:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "758:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1078,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1047,
                              "src": "773:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "702:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_payable$_t_address_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_Bet_$1010_$",
                                "typeString": "function (address,string memory,address,address,uint256) payable returns (contract Bet)"
                              },
                              "typeName": {
                                "id": 1065,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1064,
                                  "name": "Bet",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1010,
                                  "src": "706:3:5"
                                },
                                "referencedDeclaration": 1010,
                                "src": "706:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Bet_$1010",
                                  "typeString": "contract Bet"
                                }
                              }
                            },
                            "id": 1069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 1067,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "716:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "716:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "702:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_payable$_t_address_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_Bet_$1010_$value",
                              "typeString": "function (address,string memory,address,address,uint256) payable returns (contract Bet)"
                            }
                          },
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "702:76:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Bet_$1010",
                            "typeString": "contract Bet"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "692:86:5"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1081,
                              "name": "_betId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "793:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$140_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 1083,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "793:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$140_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$140_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "793:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1085,
                        "nodeType": "ExpressionStatement",
                        "src": "793:18:5"
                      },
                      {
                        "assignments": [
                          1087
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1087,
                            "mutability": "mutable",
                            "name": "newBetId",
                            "nodeType": "VariableDeclaration",
                            "scope": 1117,
                            "src": "826:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1086,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "826:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1091,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1088,
                              "name": "_betId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "845:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$140_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 1089,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 152,
                            "src": "845:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$140_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$140_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "845:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "826:35:5"
                      },
                      {
                        "assignments": [
                          1094
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1094,
                            "mutability": "mutable",
                            "name": "newUserBet",
                            "nodeType": "VariableDeclaration",
                            "scope": 1117,
                            "src": "892:25:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserBet_$1032_memory_ptr",
                              "typeString": "struct BetFactory.UserBet"
                            },
                            "typeName": {
                              "id": 1093,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1092,
                                "name": "UserBet",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1032,
                                "src": "892:7:5"
                              },
                              "referencedDeclaration": 1032,
                              "src": "892:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserBet_$1032_storage_ptr",
                                "typeString": "struct BetFactory.UserBet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1104,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1096,
                              "name": "newBetId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1087,
                              "src": "958:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1097,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "997:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "997:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1101,
                                  "name": "bet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1063,
                                  "src": "1045:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Bet_$1010",
                                    "typeString": "contract Bet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Bet_$1010",
                                    "typeString": "contract Bet"
                                  }
                                ],
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1037:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1099,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1037:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1037:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1095,
                            "name": "UserBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1032,
                            "src": "920:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_UserBet_$1032_storage_ptr_$",
                              "typeString": "type(struct BetFactory.UserBet storage pointer)"
                            }
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "betIndex",
                            "initiator",
                            "location"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "920:147:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserBet_$1032_memory_ptr",
                            "typeString": "struct BetFactory.UserBet memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "892:175:5"
                      },
                      {
                        "expression": {
                          "id": 1109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1105,
                              "name": "_betIdToDetails",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1037,
                              "src": "1146:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBet_$1032_storage_$",
                                "typeString": "mapping(uint256 => struct BetFactory.UserBet storage ref)"
                              }
                            },
                            "id": 1107,
                            "indexExpression": {
                              "id": 1106,
                              "name": "newBetId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1087,
                              "src": "1162:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1146:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserBet_$1032_storage",
                              "typeString": "struct BetFactory.UserBet storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1108,
                            "name": "newUserBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "1174:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserBet_$1032_memory_ptr",
                              "typeString": "struct BetFactory.UserBet memory"
                            }
                          },
                          "src": "1146:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserBet_$1032_storage",
                            "typeString": "struct BetFactory.UserBet storage ref"
                          }
                        },
                        "id": 1110,
                        "nodeType": "ExpressionStatement",
                        "src": "1146:38:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1114,
                              "name": "newUserBet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1094,
                              "src": "1214:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserBet_$1032_memory_ptr",
                                "typeString": "struct BetFactory.UserBet memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_UserBet_$1032_memory_ptr",
                                "typeString": "struct BetFactory.UserBet memory"
                              }
                            ],
                            "expression": {
                              "id": 1111,
                              "name": "_userBets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1041,
                              "src": "1199:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_storage_$dyn_storage",
                                "typeString": "struct BetFactory.UserBet storage ref[] storage ref"
                              }
                            },
                            "id": 1113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1199:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_UserBet_$1032_storage_$returns$__$",
                              "typeString": "function (struct BetFactory.UserBet storage ref)"
                            }
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1199:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1116,
                        "nodeType": "ExpressionStatement",
                        "src": "1199:26:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "189949a9",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "523:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "_keyMaster",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "544:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1047,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "564:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "522:55:5"
            },
            "returnParameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:0:5"
            },
            "scope": 1147,
            "src": "504:795:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "1358:47:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1131,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "1384:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BetFactory_$1147",
                            "typeString": "contract BetFactory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BetFactory_$1147",
                            "typeString": "contract BetFactory"
                          }
                        ],
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1376:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1376:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1376:13:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1376:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1128,
                  "id": 1134,
                  "nodeType": "Return",
                  "src": "1369:28:5"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 1136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:2:5"
            },
            "returnParameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "1353:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1126,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1352:6:5"
            },
            "scope": 1147,
            "src": "1311:94:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1145,
              "nodeType": "Block",
              "src": "1470:35:5",
              "statements": [
                {
                  "expression": {
                    "id": 1143,
                    "name": "_userBets",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1041,
                    "src": "1488:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_storage_$dyn_storage",
                      "typeString": "struct BetFactory.UserBet storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1142,
                  "id": 1144,
                  "nodeType": "Return",
                  "src": "1481:16:5"
                }
              ]
            },
            "functionSelector": "d73d6ec5",
            "id": 1146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allBets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1429:2:5"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1146,
                  "src": "1452:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BetFactory.UserBet[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1139,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1138,
                        "name": "UserBet",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1032,
                        "src": "1452:7:5"
                      },
                      "referencedDeclaration": 1032,
                      "src": "1452:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserBet_$1032_storage_ptr",
                        "typeString": "struct BetFactory.UserBet"
                      }
                    },
                    "id": 1140,
                    "nodeType": "ArrayTypeName",
                    "src": "1452:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UserBet_$1032_storage_$dyn_storage_ptr",
                      "typeString": "struct BetFactory.UserBet[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1451:18:5"
            },
            "scope": 1147,
            "src": "1413:92:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1148,
        "src": "143:1367:5"
      }
    ],
    "src": "39:1471:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x7db27AC73810ad204F6c0bF133576Ab327B2B122",
      "transactionHash": "0xe07aabf75f301c8f69fe7a596bbd3a8d245c1c237220bd9f6f61a1dac874df6a"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-07-01T11:30:33.547Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}